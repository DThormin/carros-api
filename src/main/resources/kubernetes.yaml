---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carros-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carros-api
  template:
    metadata:
      labels:
        app: carros-api
    spec:
      containers:
        - name: carros-api
          image: midianet/carros-api:@project.version@
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path:  /actuator/health
              port: 8080
            initialDelaySeconds: 180
            timeoutSeconds: 20
            periodSeconds: 30
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path:  /actuator/health
              port: 8080
            initialDelaySeconds: 180
            timeoutSeconds: 20
            periodSeconds: 80
            failureThreshold: 10
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
---

apiVersion: v1
kind: Service
metadata:
  name: carros-api
spec:
  type: NodePort
  selector:
    app: carros-api
  ports:
    - port: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: carros-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "carros-api"
spec:
  rules:
    - host: carros-api.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: carros-api
                port:
                  number: 8080
